import { UISchemaElement } from '../models';
export type IterateCallback = (uischema: UISchemaElement) => void;
export declare const setReadonly: (uischema: UISchemaElement) => void;
export declare const unsetReadonly: (uischema: UISchemaElement) => void;
export declare const iterateSchema: (uischema: UISchemaElement, toApply: IterateCallback) => void;
/**
 * Transform a dotted path to a uiSchema properties path
 * @param path a dotted prop path to a schema value (i.e. articles.comment.author)
 * @return the uiSchema properties path (i.e. /properties/articles/properties/comment/properties/author)
 */
export declare const getPropPath: (path: string) => string;
/**
 * Find a control in a uiSchema, based on the dotted path of the schema value
 * @param {UISchemaElement} uiSchema the uiSchema to search from
 * @param path a dotted prop path to a schema value (i.e. articles.comment.author)
 * @return {UISchemaElement} or undefined if not found
 */
export declare const findUiControl: (uiSchema: UISchemaElement, path: string) => UISchemaElement | undefined;
